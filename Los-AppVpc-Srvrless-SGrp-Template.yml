AWSTemplateFormatVersion: 2010-09-09
Description: >
  This template is to create the SecurityGroup with required Ingress and Egress rules.Version: 1.1, Description of change: Added IpProtocol into parameter to create customized rules.
Parameters:
   VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: Enter the VPC Id.
   ResourceNamePrefix:
    Type: String
    Description: Enter prefix for Resource Names
   EnvironmentType:
    Description: Name your EnvironmentType According to your need.
    Type: String
   IngressRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "IpProtocol:FromPort:ToPort:SourceSecurityGroupId|CidrIp" (ex. 6:8080:8080:sg-04cb6722844514c11)'
    Default: 'N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N'
   EgressRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "IpProtocol:FromPort:ToPort:SourceSecurityGroupId|CidrIp" (ex. 6:8080:8080:sg-04cb6722844514c11)'
    Default: 'N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N,N:N:N:N'
   ServiceName:
    Type: String
    Description: "Specify the name of the service used by SecurityGroup"

Conditions:
  Ingress0Exist: !Equals [ !Select [ 0, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn0: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 0, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress1Exist: !Equals [ !Select [ 1, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn1: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 1, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress2Exist: !Equals [ !Select [ 2, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn2: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 2, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress3Exist: !Equals [ !Select [ 3, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn3: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 3, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress4Exist: !Equals [ !Select [ 4, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn4: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 4, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress5Exist: !Equals [ !Select [ 5, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn5: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 5, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress6Exist: !Equals [ !Select [ 6, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn6: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 6, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress7Exist: !Equals [ !Select [ 7, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn7: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 7, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress8Exist: !Equals [ !Select [ 8, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn8: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 8, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress9Exist: !Equals [ !Select [ 9, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn9: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 9, !Ref IngressRules ] ] ]]], "sg" ]
  
  Ingress10Exist: !Equals [ !Select [ 10, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn10: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 10, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress11Exist: !Equals [ !Select [ 11, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn11: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 11, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress12Exist: !Equals [ !Select [ 12, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn12: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 12, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress13Exist: !Equals [ !Select [ 13, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn13: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 13, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress14Exist: !Equals [ !Select [ 14, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn14: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 14, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress15Exist: !Equals [ !Select [ 15, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn15: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 15, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress16Exist: !Equals [ !Select [ 16, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn16: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 16, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress17Exist: !Equals [ !Select [ 17, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn17: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 17, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress18Exist: !Equals [ !Select [ 18, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn18: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 18, !Ref IngressRules ] ] ]]], "sg" ]
  Ingress19Exist: !Equals [ !Select [ 19, !Ref IngressRules ], "N:N:N:N" ]
  SgFoundIn19: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 19, !Ref IngressRules ] ] ]]], "sg" ]
  
  Egress0Exist: !Equals [ !Select [ 0, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn0: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 0, !Ref EgressRules ] ] ]]], "sg" ]
  Egress1Exist: !Equals [ !Select [ 1, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn1: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 1, !Ref EgressRules ] ] ]]], "sg" ]
  Egress2Exist: !Equals [ !Select [ 2, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn2: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 2, !Ref EgressRules ] ] ]]], "sg" ]
  Egress3Exist: !Equals [ !Select [ 3, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn3: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 3, !Ref EgressRules ] ] ]]], "sg" ]
  Egress4Exist: !Equals [ !Select [ 4, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn4: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 4, !Ref EgressRules ] ] ]]], "sg" ]
  Egress5Exist: !Equals [ !Select [ 5, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn5: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 5, !Ref EgressRules ] ] ]]], "sg" ]
  Egress6Exist: !Equals [ !Select [ 6, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn6: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 6, !Ref EgressRules ] ] ]]], "sg" ]
  Egress7Exist: !Equals [ !Select [ 7, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn7: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 7, !Ref EgressRules ] ] ]]], "sg" ]
  Egress8Exist: !Equals [ !Select [ 8, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn8: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 8, !Ref EgressRules ] ] ]]], "sg" ]
  Egress9Exist: !Equals [ !Select [ 9, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn9: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 9, !Ref EgressRules ] ] ]]], "sg" ]
  
  Egress10Exist: !Equals [ !Select [ 10, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn10: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 10, !Ref EgressRules ] ] ]]], "sg" ]
  Egress11Exist: !Equals [ !Select [ 11, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn11: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 11, !Ref EgressRules ] ] ]]], "sg" ]
  Egress12Exist: !Equals [ !Select [ 12, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn12: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 12, !Ref EgressRules ] ] ]]], "sg" ]
  Egress13Exist: !Equals [ !Select [ 13, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn13: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 13, !Ref EgressRules ] ] ]]], "sg" ]
  Egress14Exist: !Equals [ !Select [ 14, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn14: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 14, !Ref EgressRules ] ] ]]], "sg" ]
  Egress15Exist: !Equals [ !Select [ 15, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn15: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 15, !Ref EgressRules ] ] ]]], "sg" ]
  Egress16Exist: !Equals [ !Select [ 16, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn16: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 16, !Ref EgressRules ] ] ]]], "sg" ]
  Egress17Exist: !Equals [ !Select [ 17, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn17: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 17, !Ref EgressRules ] ] ]]], "sg" ]
  Egress18Exist: !Equals [ !Select [ 18, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn18: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 18, !Ref EgressRules ] ] ]]], "sg" ]
  Egress19Exist: !Equals [ !Select [ 19, !Ref EgressRules ], "N:N:N:N" ]
  EgressSgFoundIn19: !Equals [ !Select [ 0, !Split [ '-', !Select [ 3, !Split [ ':', !Select [ 19, !Ref EgressRules ] ] ]]], "sg" ]
  
Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    
    Properties:
      GroupDescription: 'This is to create the Ingress and Egress rules in SecurityGroup for the Serverless functions'
      GroupName: !Sub '${ResourceNamePrefix}-${EnvironmentType}-${ServiceName}-Srvrless-SG'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - !If
        - Ingress0Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 0, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 0, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 0, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn0, !Select [ 3, !Split [ ':', !Select [ 0, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn0, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 0, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress1Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 1, !Ref IngressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 1, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 1, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn1, !Select [ 3, !Split [ ':', !Select [ 1, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn1, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 1, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress2Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 2, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 2, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 2, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn2, !Select [ 3, !Split [ ':', !Select [ 2, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn2, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 2, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress3Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 3, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 3, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 3, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn3, !Select [ 3, !Split [ ':', !Select [ 3, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn3, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 3, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress4Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 4, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 4, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 4, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn4, !Select [ 3, !Split [ ':', !Select [ 4, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn4, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 4, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress5Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 5, !Ref IngressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 5, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 5, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn5, !Select [ 3, !Split [ ':', !Select [ 5, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn5, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 5, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress6Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 6, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 6, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 6, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn6, !Select [ 3, !Split [ ':', !Select [ 6, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn6, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 6, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress7Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 7, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 7, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 7, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn7, !Select [ 3, !Split [ ':', !Select [ 7, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn7, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 7, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress8Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 8, !Ref IngressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 8, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 8, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn8, !Select [ 3, !Split [ ':', !Select [ 8, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn8, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 8, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress9Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 9, !Ref IngressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 9, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 9, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn9, !Select [ 3, !Split [ ':', !Select [ 9, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn9, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 9, !Ref IngressRules ] ] ] ]
      
      - !If
        - Ingress10Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 10, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 10, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 10, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn0, !Select [ 3, !Split [ ':', !Select [ 10, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn0, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 10, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress11Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 11, !Ref IngressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 11, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 11, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn1, !Select [ 3, !Split [ ':', !Select [ 11, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn1, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 11, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress12Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 12, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 12, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 12, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn2, !Select [ 3, !Split [ ':', !Select [ 12, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn2, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 12, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress13Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 13, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 13, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 13, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn3, !Select [ 3, !Split [ ':', !Select [ 13, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn3, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 13, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress14Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 14, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 14, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 14, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn4, !Select [ 3, !Split [ ':', !Select [ 14, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn4, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 14, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress15Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 15, !Ref IngressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 15, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 15, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn5, !Select [ 3, !Split [ ':', !Select [ 15, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn5, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 15, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress16Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 16, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 16, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 16, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn6, !Select [ 3, !Split [ ':', !Select [ 16, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn6, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 16, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress17Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 17, !Ref IngressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 17, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 17, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn7, !Select [ 3, !Split [ ':', !Select [ 17, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn7, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 17, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress18Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 18, !Ref IngressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 18, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 18, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn8, !Select [ 3, !Split [ ':', !Select [ 18, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn8, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 18, !Ref IngressRules ] ] ] ]
      - !If
        - Ingress19Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 19, !Ref IngressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 19, !Ref IngressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 19, !Ref IngressRules ] ] ] 
          SourceSecurityGroupId: !If [SgFoundIn9, !Select [ 3, !Split [ ':', !Select [ 19, !Ref IngressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [SgFoundIn9, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 19, !Ref IngressRules ] ] ] ]
      SecurityGroupEgress: 
      - !If
        - Egress0Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 0, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 0, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 0, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn0, !Select [ 3, !Split [ ':', !Select [ 0, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn0, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 0, !Ref EgressRules ] ] ] ]
      - !If
        - Egress1Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 1, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 1, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 1, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn1, !Select [ 3, !Split [ ':', !Select [ 1, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn1, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 1, !Ref EgressRules ] ] ] ]
      - !If
        - Egress2Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 2, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 2, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 2, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn2, !Select [ 3, !Split [ ':', !Select [ 2, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn2, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 2, !Ref EgressRules ] ] ] ]
      - !If
        - Egress3Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 3, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 3, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 3, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn3, !Select [ 3, !Split [ ':', !Select [ 3, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn3, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 3, !Ref EgressRules ] ] ] ]
      - !If
        - Egress4Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 4, !Ref EgressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 4, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 4, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn4, !Select [ 3, !Split [ ':', !Select [ 4, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn4, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 4, !Ref EgressRules ] ] ] ]
      - !If
        - Egress5Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 5, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 5, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 5, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn5, !Select [ 3, !Split [ ':', !Select [ 5, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn5, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 5, !Ref EgressRules ] ] ] ]
      - !If
        - Egress6Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 6, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 6, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 6, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn6, !Select [ 3, !Split [ ':', !Select [ 6, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn6, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 6, !Ref EgressRules ] ] ] ]
      - !If
        - Egress7Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 7, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 7, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 7, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn7, !Select [ 3, !Split [ ':', !Select [ 7, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn7, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 7, !Ref EgressRules ] ] ] ]
      - !If
        - Egress8Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 8, !Ref EgressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 8, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 8, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn8, !Select [ 3, !Split [ ':', !Select [ 8, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn8, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 8, !Ref EgressRules ] ] ] ]
      - !If
        - Egress9Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 9, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 9, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 9, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn9, !Select [ 3, !Split [ ':', !Select [ 9, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn9, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 9, !Ref EgressRules ] ] ] ] 
          
      - !If
        - Egress10Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 10, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 10, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 10, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn0, !Select [ 3, !Split [ ':', !Select [ 10, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn0, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 10, !Ref EgressRules ] ] ] ]
      - !If
        - Egress11Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 11, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 11, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 11, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn1, !Select [ 3, !Split [ ':', !Select [ 11, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn1, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 11, !Ref EgressRules ] ] ] ]
      - !If
        - Egress12Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 12, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 12, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 12, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn2, !Select [ 3, !Split [ ':', !Select [ 12, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn2, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 12, !Ref EgressRules ] ] ] ]
      - !If
        - Egress13Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 13, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 13, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 13, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn3, !Select [ 3, !Split [ ':', !Select [ 13, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn3, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 13, !Ref EgressRules ] ] ] ]
      - !If
        - Egress14Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 14, !Ref EgressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 14, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 14, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn4, !Select [ 3, !Split [ ':', !Select [ 14, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn4, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 14, !Ref EgressRules ] ] ] ]
      - !If
        - Egress15Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 15, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 15, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 15, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn5, !Select [ 3, !Split [ ':', !Select [ 15, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn5, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 15, !Ref EgressRules ] ] ] ]
      - !If
        - Egress16Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 16, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 16, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 16, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn6, !Select [ 3, !Split [ ':', !Select [ 16, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn6, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 16, !Ref EgressRules ] ] ] ]
      - !If
        - Egress17Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 17, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 17, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 17, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn7, !Select [ 3, !Split [ ':', !Select [ 17, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn7, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 17, !Ref EgressRules ] ] ] ]
      - !If
        - Egress18Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 18, !Ref EgressRules ] ] ]
          FromPort: !Select [ 1, !Split [ ':', !Select [ 18, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 18, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn8, !Select [ 3, !Split [ ':', !Select [ 18, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn8, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 18, !Ref EgressRules ] ] ] ]
      - !If
        - Egress19Exist
        - !Ref "AWS::NoValue"
        - IpProtocol: !Select [ 0, !Split [ ':', !Select [ 19, !Ref EgressRules ] ] ] 
          FromPort: !Select [ 1, !Split [ ':', !Select [ 19, !Ref EgressRules ] ] ] 
          ToPort: !Select [ 2, !Split [ ':', !Select [ 19, !Ref EgressRules ] ] ] 
          DestinationSecurityGroupId: !If [EgressSgFoundIn9, !Select [ 3, !Split [ ':', !Select [ 19, !Ref EgressRules ] ] ], !Ref "AWS::NoValue" ]
          CidrIp: !If [EgressSgFoundIn9, !Ref "AWS::NoValue", !Select [ 3, !Split [ ':', !Select [ 19, !Ref EgressRules ] ] ] ] 
      Tags:
        - Key: Name
          Value: !Sub '${ResourceNamePrefix}-${EnvironmentType}-${ServiceName}-Srvrless-SG'
        - Key: ApplicationRole
          Value: !Sub '${EnvironmentType}-${ServiceName}-Srvrless-SG'
Outputs:
  ServerlessSgId:
    Value: !GetAtt SecurityGroup.GroupId
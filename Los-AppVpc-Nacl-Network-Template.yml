
AWSTemplateFormatVersion: 2010-09-09
Description: 'The template is used to create generic Nacl template with 20 inbound and outbound rules.Version: 0.1, Description of change: Initial Version'
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: "Naming Conventions"
        Parameters: 
          - ResourceNamePrefix
          - EnvironmentType
          - ServiceName
          - NaclGroupNames
      - Label: 
          default: "Common Inputs"
        Parameters:
          - VpcId
          - DefaultNaclID
      - Label: 
          default: "NACL Group1 Inputs"
        Parameters:
          - NaclGroup1SubnetIds
          - NaclGroup1InboundRules
          - NaclGroup1OutboundRules
      - Label: 
          default: "NACL Group2 Inputs"
        Parameters:
          - NaclGroup2SubnetIds
          - NaclGroup2InboundRules
          - NaclGroup2OutboundRules
      - Label: 
          default: "NACL Group3 Inputs"
        Parameters:
          - NaclGroup3SubnetIds
          - NaclGroup3InboundRules
          - NaclGroup3OutboundRules
      - Label: 
          default: "NACL Group4 Inputs"
        Parameters:
          - NaclGroup4SubnetIds
          - NaclGroup4InboundRules
          - NaclGroup4OutboundRules
      - Label: 
          default: "NACL Group5 Inputs"
        Parameters:
          - NaclGroup5SubnetIds
          - NaclGroup5InboundRules
          - NaclGroup5OutboundRules
      - Label: 
          default: "NACL Group6 Inputs"
        Parameters:
          - NaclGroup6SubnetIds
          - NaclGroup6InboundRules
          - NaclGroup6OutboundRules
Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: Enter the VPC Id.
  ResourceNamePrefix:
    Type: String
    Description: Enter prefix for Resource Names
  EnvironmentType:
    Description: Name your EnvironmentType According to your need.
    Type: String
  ServiceName:
    Type: String
    Description: "Specify the name of the service used by security group."
  DefaultNaclID:
    Type: String
    Description: (Optional) Specify the default NACL ID which was created as part of VPC creation.
  NaclGroupNames:
    Type: CommaDelimitedList
    Description: Specify the group names which will be used in NACL name tag. (ex). App, Db, Web
    Default: None,None,None,None,None,None
  NaclGroup1InboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically. (ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup1OutboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically.(ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup2InboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically. (ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup2OutboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically.(ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup3InboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically. (ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup3OutboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically.(ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup4InboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically. (ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup4OutboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically.(ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup5InboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically. (ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup5OutboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically.(ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup6InboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically. (ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup6OutboundRules:
    Type: CommaDelimitedList
    Description: 'Specify the rule information in following format "RuleNumber:FromPort:ToPort:Protocol:RuleAction:CidrBlock.,.,.". The values are used to create the NACL rules dynamically.(ex. 1000:443:443:6:allow:0.0.0.0/0)'
    Default: '1000:443:443:6:allow:0.0.0.0/0,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None,None'
  NaclGroup1SubnetIds:
    Type: CommaDelimitedList
    Description: 'Select the subnets to associates with a network ACL.'
    Default: 'None,None,None,None,None,None'
  NaclGroup2SubnetIds:
    Type: CommaDelimitedList
    Description: Select the subnets to associates with a network ACL.
    Default: 'None,None,None,None,None,None'
  NaclGroup3SubnetIds:
    Type: CommaDelimitedList
    Description: Select the subnets to associates with a network ACL.
    Default: 'None,None,None,None,None,None'
  NaclGroup4SubnetIds:
    Type: CommaDelimitedList
    Description: Select the subnets to associates with a network ACL.
    Default: 'None,None,None,None,None,None'
  NaclGroup5SubnetIds:
    Type: CommaDelimitedList
    Description: Select the subnets to associates with a network ACL.
    Default: 'None,None,None,None,None,None'
  NaclGroup6SubnetIds:
    Type: CommaDelimitedList
    Description: Select the subnets to associates with a network ACL.
    Default: 'None,None,None,None,None,None'
Conditions:
  
  DefaultNaclIdExist: !Equals [ !Ref DefaultNaclID, '' ]
  
  CreateNaclGroup1: !Or 
  - !Condition DefaultNaclIdExist
  - !Condition NaclGroup1InboundRules0Exist
  - !Condition NaclGroup1InboundRules1Exist
  - !Condition NaclGroup1InboundRules2Exist
  - !Condition NaclGroup1InboundRules3Exist
  - !Condition NaclGroup1OutboundRules0Exist
  - !Condition NaclGroup1OutboundRules1Exist
  - !Condition NaclGroup1OutboundRules2Exist
  - !Condition NaclGroup1OutboundRules3Exist
  CreateNaclGroup2: !Or
  - !Condition NaclGroup2InboundRules0Exist
  - !Condition NaclGroup2InboundRules1Exist
  - !Condition NaclGroup2InboundRules2Exist
  - !Condition NaclGroup2InboundRules3Exist
  - !Condition NaclGroup2InboundRules4Exist
  - !Condition NaclGroup2OutboundRules0Exist
  - !Condition NaclGroup2OutboundRules1Exist
  - !Condition NaclGroup2OutboundRules2Exist
  - !Condition NaclGroup2OutboundRules3Exist
  CreateNaclGroup3: !Or
  - !Condition NaclGroup3InboundRules0Exist
  - !Condition NaclGroup3InboundRules1Exist
  - !Condition NaclGroup3InboundRules2Exist
  - !Condition NaclGroup3InboundRules3Exist
  - !Condition NaclGroup3InboundRules4Exist
  - !Condition NaclGroup3OutboundRules0Exist
  - !Condition NaclGroup3OutboundRules1Exist
  - !Condition NaclGroup3OutboundRules2Exist
  - !Condition NaclGroup3OutboundRules3Exist
  CreateNaclGroup4: !Or
  - !Condition NaclGroup4InboundRules0Exist
  - !Condition NaclGroup4InboundRules1Exist
  - !Condition NaclGroup4InboundRules2Exist
  - !Condition NaclGroup4InboundRules3Exist
  - !Condition NaclGroup4InboundRules4Exist
  - !Condition NaclGroup4OutboundRules0Exist
  - !Condition NaclGroup4OutboundRules1Exist
  - !Condition NaclGroup4OutboundRules2Exist
  - !Condition NaclGroup4OutboundRules3Exist
  CreateNaclGroup5: !Or
  - !Condition NaclGroup5InboundRules0Exist
  - !Condition NaclGroup5InboundRules1Exist
  - !Condition NaclGroup5InboundRules2Exist
  - !Condition NaclGroup5InboundRules3Exist
  - !Condition NaclGroup5InboundRules4Exist
  - !Condition NaclGroup5OutboundRules0Exist
  - !Condition NaclGroup5OutboundRules1Exist
  - !Condition NaclGroup5OutboundRules2Exist
  - !Condition NaclGroup5OutboundRules3Exist
  CreateNaclGroup6: !Or
  - !Condition NaclGroup6InboundRules0Exist
  - !Condition NaclGroup6InboundRules1Exist
  - !Condition NaclGroup6InboundRules2Exist
  - !Condition NaclGroup6InboundRules3Exist
  - !Condition NaclGroup6InboundRules4Exist
  - !Condition NaclGroup6OutboundRules0Exist
  - !Condition NaclGroup6OutboundRules1Exist
  - !Condition NaclGroup6OutboundRules2Exist
  - !Condition NaclGroup6OutboundRules3Exist
  
  NaclGroup1InboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup1InboundRules], "None"] ]
  NaclGroup1InboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup1InboundRules], "None"] ]
  
  NaclGroup1OutboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup1OutboundRules], "None"] ]
  NaclGroup1OutboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup1OutboundRules], "None"] ]
  
  NaclGroup2InboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup2InboundRules], "None"] ]
  NaclGroup2InboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup2InboundRules], "None"] ]
  
  NaclGroup2OutboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup2OutboundRules], "None"] ]
  NaclGroup2OutboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup2OutboundRules], "None"] ]
  
  NaclGroup3InboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup3InboundRules], "None"] ]
  NaclGroup3InboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup3InboundRules], "None"] ]
  
  NaclGroup3OutboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup3OutboundRules], "None"] ]
  NaclGroup3OutboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup3OutboundRules], "None"] ]
  
  NaclGroup4InboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup4InboundRules], "None"] ]
  NaclGroup4InboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup4InboundRules], "None"] ]
  
  NaclGroup4OutboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup4OutboundRules], "None"] ]
  NaclGroup4OutboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup4OutboundRules], "None"] ]
  
  NaclGroup5InboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup5InboundRules], "None"] ]
  NaclGroup5InboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup5InboundRules], "None"] ]
  
  NaclGroup5OutboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup5OutboundRules], "None"] ]
  NaclGroup5OutboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup5OutboundRules], "None"] ]
  
  NaclGroup6InboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup6InboundRules], "None"] ]
  NaclGroup6InboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup6InboundRules], "None"] ]
  
  NaclGroup6OutboundRules0Exist: !Not [ !Equals [ !Select [0, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules1Exist: !Not [ !Equals [ !Select [1, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules2Exist: !Not [ !Equals [ !Select [2, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules3Exist: !Not [ !Equals [ !Select [3, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules4Exist: !Not [ !Equals [ !Select [4, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules5Exist: !Not [ !Equals [ !Select [5, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules6Exist: !Not [ !Equals [ !Select [6, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules7Exist: !Not [ !Equals [ !Select [7, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules8Exist: !Not [ !Equals [ !Select [8, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules9Exist: !Not [ !Equals [ !Select [9, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules10Exist: !Not [ !Equals [ !Select [10, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules11Exist: !Not [ !Equals [ !Select [11, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules12Exist: !Not [ !Equals [ !Select [12, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules13Exist: !Not [ !Equals [ !Select [13, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules14Exist: !Not [ !Equals [ !Select [14, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules15Exist: !Not [ !Equals [ !Select [15, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules16Exist: !Not [ !Equals [ !Select [16, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules17Exist: !Not [ !Equals [ !Select [17, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules18Exist: !Not [ !Equals [ !Select [18, !Ref NaclGroup6OutboundRules], "None"] ]
  NaclGroup6OutboundRules19Exist: !Not [ !Equals [ !Select [19, !Ref NaclGroup6OutboundRules], "None"] ]
  
  NaclGroup1Subnet1Exist: !And [ !Not [!Equals [ !Select [0, !Ref NaclGroup1SubnetIds], "None"]], !Condition CreateNaclGroup1 ]
  NaclGroup1Subnet2Exist: !And [ !Not [!Equals [ !Select [1, !Ref NaclGroup1SubnetIds], "None"]], !Condition CreateNaclGroup1 ]
  NaclGroup1Subnet3Exist: !And [ !Not [!Equals [ !Select [2, !Ref NaclGroup1SubnetIds], "None"]], !Condition CreateNaclGroup1 ]
  NaclGroup1Subnet4Exist: !And [ !Not [!Equals [ !Select [3, !Ref NaclGroup1SubnetIds], "None"]], !Condition CreateNaclGroup1 ]
  NaclGroup1Subnet5Exist: !And [ !Not [!Equals [ !Select [4, !Ref NaclGroup1SubnetIds], "None"]], !Condition CreateNaclGroup1 ]
  
  
  NaclGroup2Subnet1Exist: !And [ !Not [!Equals [ !Select [0, !Ref NaclGroup2SubnetIds], "None"]], !Condition CreateNaclGroup2 ]
  NaclGroup2Subnet2Exist: !And [ !Not [!Equals [ !Select [1, !Ref NaclGroup2SubnetIds], "None"]], !Condition CreateNaclGroup2 ]
  NaclGroup2Subnet3Exist: !And [ !Not [!Equals [ !Select [2, !Ref NaclGroup2SubnetIds], "None"]], !Condition CreateNaclGroup2 ]
  NaclGroup2Subnet4Exist: !And [ !Not [!Equals [ !Select [3, !Ref NaclGroup2SubnetIds], "None"]], !Condition CreateNaclGroup2 ]
  NaclGroup2Subnet5Exist: !And [ !Not [!Equals [ !Select [4, !Ref NaclGroup2SubnetIds], "None"]], !Condition CreateNaclGroup2 ]
  
  
  NaclGroup3Subnet1Exist: !And [ !Not [!Equals [ !Select [0, !Ref NaclGroup3SubnetIds], "None"]], !Condition CreateNaclGroup3 ]
  NaclGroup3Subnet2Exist: !And [ !Not [!Equals [ !Select [1, !Ref NaclGroup3SubnetIds], "None"]], !Condition CreateNaclGroup3 ]
  NaclGroup3Subnet3Exist: !And [ !Not [!Equals [ !Select [2, !Ref NaclGroup3SubnetIds], "None"]], !Condition CreateNaclGroup3 ]
  NaclGroup3Subnet4Exist: !And [ !Not [!Equals [ !Select [3, !Ref NaclGroup3SubnetIds], "None"]], !Condition CreateNaclGroup3 ]
  NaclGroup3Subnet5Exist: !And [ !Not [!Equals [ !Select [4, !Ref NaclGroup3SubnetIds], "None"]], !Condition CreateNaclGroup3 ]
 
  
  NaclGroup4Subnet1Exist: !And [ !Not [!Equals [ !Select [0, !Ref NaclGroup4SubnetIds], "None"]], !Condition CreateNaclGroup4 ]
  NaclGroup4Subnet2Exist: !And [ !Not [!Equals [ !Select [1, !Ref NaclGroup4SubnetIds], "None"]], !Condition CreateNaclGroup4 ]
  NaclGroup4Subnet3Exist: !And [ !Not [!Equals [ !Select [2, !Ref NaclGroup4SubnetIds], "None"]], !Condition CreateNaclGroup4 ]
  NaclGroup4Subnet4Exist: !And [ !Not [!Equals [ !Select [3, !Ref NaclGroup4SubnetIds], "None"]], !Condition CreateNaclGroup4 ]
  NaclGroup4Subnet5Exist: !And [ !Not [!Equals [ !Select [4, !Ref NaclGroup4SubnetIds], "None"]], !Condition CreateNaclGroup4 ]
  
  
  NaclGroup5Subnet1Exist: !And [ !Not [!Equals [ !Select [0, !Ref NaclGroup5SubnetIds], "None"]], !Condition CreateNaclGroup5 ]
  NaclGroup5Subnet2Exist: !And [ !Not [!Equals [ !Select [1, !Ref NaclGroup5SubnetIds], "None"]], !Condition CreateNaclGroup5 ]
  NaclGroup5Subnet3Exist: !And [ !Not [!Equals [ !Select [2, !Ref NaclGroup5SubnetIds], "None"]], !Condition CreateNaclGroup5 ]
  NaclGroup5Subnet4Exist: !And [ !Not [!Equals [ !Select [3, !Ref NaclGroup5SubnetIds], "None"]], !Condition CreateNaclGroup5 ]
  NaclGroup5Subnet5Exist: !And [ !Not [!Equals [ !Select [4, !Ref NaclGroup5SubnetIds], "None"]], !Condition CreateNaclGroup5 ]
  
  
  NaclGroup6Subnet1Exist: !And [ !Not [!Equals [ !Select [0, !Ref NaclGroup6SubnetIds], "None"]], !Condition CreateNaclGroup6 ]
  NaclGroup6Subnet2Exist: !And [ !Not [!Equals [ !Select [1, !Ref NaclGroup6SubnetIds], "None"]], !Condition CreateNaclGroup6 ]
  NaclGroup6Subnet3Exist: !And [ !Not [!Equals [ !Select [2, !Ref NaclGroup6SubnetIds], "None"]], !Condition CreateNaclGroup6 ]
  NaclGroup6Subnet4Exist: !And [ !Not [!Equals [ !Select [3, !Ref NaclGroup6SubnetIds], "None"]], !Condition CreateNaclGroup6 ]
  NaclGroup6Subnet5Exist: !And [ !Not [!Equals [ !Select [4, !Ref NaclGroup6SubnetIds], "None"]], !Condition CreateNaclGroup6 ]
  
Resources:
  NaclGroup1:
    Type: AWS::EC2::NetworkAcl
    Condition: DefaultNaclIdExist
    Properties:
      VpcId:
        Ref: VpcId
      Tags:
      - Key: Name
        Value: 
          !Sub 
          - '${ResourceNamePrefix}-${EnvironmentType}-${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 0, !Ref NaclGroupNames ]
      - Key: ApplicationRole
        Value: !Sub 
          - '${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 0, !Ref NaclGroupNames ]

  NaclGroup1InboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules0Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]
  NaclGroup1InboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules1Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules2Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules3Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules4Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules5Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules6Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules7Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules8Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules9Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules10Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules11Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules12Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules13Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules14Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules15Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules16Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules17Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules18Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1InboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1InboundRules19Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup1InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup1InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup1InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup1InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup1InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup1InboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules0Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]
  NaclGroup1OutboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules1Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules2Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules3Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules4Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules5Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules6Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules7Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules8Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules9Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules10Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules11Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules12Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules13Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules14Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules15Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules16Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules17Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules18Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]      
  NaclGroup1OutboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup1OutboundRules19Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup1OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup1OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup1OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup1OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup1OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup1OutboundRules]]]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID]
  NaclGroup1Subnet1Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup1Subnet1Exist
    Properties:
      SubnetId:
        !Select [ 0, !Ref NaclGroup1SubnetIds]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID ]
  NaclGroup1Subnet2Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup1Subnet2Exist
    Properties:
      SubnetId:
        !Select [ 1, !Ref NaclGroup1SubnetIds]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID ]
  NaclGroup1Subnet3Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup1Subnet3Exist
    Properties:
      SubnetId:
        !Select [ 2, !Ref NaclGroup1SubnetIds]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID ]
  NaclGroup1Subnet4Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup1Subnet4Exist
    Properties:
      SubnetId:
        !Select [ 3, !Ref NaclGroup1SubnetIds]
      NetworkAclId: !If [ DefaultNaclIdExist, !Ref NaclGroup1, !Ref DefaultNaclID ]

  NaclGroup2:
    Type: AWS::EC2::NetworkAcl
    Condition: CreateNaclGroup2
    Properties:
      VpcId:
        Ref: VpcId
      Tags:
      - Key: Name
        Value: 
          !Sub 
          - '${ResourceNamePrefix}-${EnvironmentType}-${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 1, !Ref NaclGroupNames ]
      - Key: ApplicationRole
        Value: !Sub 
          - '${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 1, !Ref NaclGroupNames ]
  NaclGroup2Subnet1Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup2Subnet1Exist
    Properties:
      SubnetId:
        !Select [ 0, !Ref NaclGroup2SubnetIds]
      NetworkAclId: !Ref NaclGroup2
  NaclGroup2Subnet2Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup2Subnet2Exist
    Properties:
      SubnetId:
        !Select [ 1, !Ref NaclGroup2SubnetIds]
      NetworkAclId: !Ref NaclGroup2
  NaclGroup2Subnet3Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup2Subnet3Exist
    Properties:
      SubnetId:
        !Select [ 2, !Ref NaclGroup2SubnetIds]
      NetworkAclId: !Ref NaclGroup2
  NaclGroup2Subnet4Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup2Subnet4Exist
    Properties:
      SubnetId:
        !Select [ 3, !Ref NaclGroup2SubnetIds]
      NetworkAclId: !Ref NaclGroup2
  NaclGroup2InboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules0Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2
  NaclGroup2InboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules1Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules2Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules3Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules4Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules5Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules6Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules7Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules8Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules9Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules10Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules11Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules12Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules13Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules14Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules15Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules16Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules17Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules18Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2InboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2InboundRules19Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup2InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup2InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup2InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup2InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup2InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup2InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules0Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2
  NaclGroup2OutboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules1Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules2Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules3Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules4Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules5Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules6Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules7Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules8Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules9Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules10Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules11Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules12Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules13Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules14Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules15Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules16Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules17Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules18Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2      
  NaclGroup2OutboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup2OutboundRules19Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup2OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup2OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup2OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup2OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup2OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup2OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup2

  NaclGroup3:
    Type: AWS::EC2::NetworkAcl
    Condition: CreateNaclGroup3
    Properties:
      VpcId:
        Ref: VpcId
      Tags:
      - Key: Name
        Value: 
          !Sub 
          - '${ResourceNamePrefix}-${EnvironmentType}-${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 2, !Ref NaclGroupNames ]
      - Key: ApplicationRole
        Value: !Sub 
          - '${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 2, !Ref NaclGroupNames ]
  NaclGroup3Subnet1Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup3Subnet1Exist
    Properties:
      SubnetId:
        !Select [ 0, !Ref NaclGroup3SubnetIds]
      NetworkAclId: !Ref NaclGroup3
  NaclGroup3Subnet2Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup3Subnet2Exist
    Properties:
      SubnetId:
        !Select [ 1, !Ref NaclGroup3SubnetIds]
      NetworkAclId: !Ref NaclGroup3
  NaclGroup3Subnet3Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup3Subnet3Exist
    Properties:
      SubnetId:
        !Select [ 2, !Ref NaclGroup3SubnetIds]
      NetworkAclId: !Ref NaclGroup3
  NaclGroup3Subnet4Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup3Subnet4Exist
    Properties:
      SubnetId:
        !Select [ 3, !Ref NaclGroup3SubnetIds]
      NetworkAclId: !Ref NaclGroup3
  NaclGroup3InboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules0Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3
  NaclGroup3InboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules1Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules2Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules3Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules4Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules5Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules6Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules7Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules8Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules9Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules10Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules11Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules12Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules13Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules14Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules15Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules16Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules17Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules18Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3InboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3InboundRules19Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup3InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup3InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup3InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup3InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup3InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup3InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules0Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3
  NaclGroup3OutboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules1Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules2Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules3Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules4Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules5Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules6Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules7Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules8Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules9Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules10Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules11Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules12Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules13Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules14Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules15Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules16Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules17Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules18Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3      
  NaclGroup3OutboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup3OutboundRules19Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup3OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup3OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup3OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup3OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup3OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup3OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup3
  NaclGroup4:
    Type: AWS::EC2::NetworkAcl
    Condition: CreateNaclGroup4
    Properties:
      VpcId:
        Ref: VpcId
      Tags:
      - Key: Name
        Value: 
          !Sub 
          - '${ResourceNamePrefix}-${EnvironmentType}-${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 3, !Ref NaclGroupNames ]
      - Key: ApplicationRole
        Value: !Sub 
          - '${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 3, !Ref NaclGroupNames ]
  NaclGroup4Subnet1Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup4Subnet1Exist
    Properties:
      SubnetId:
        !Select [ 0, !Ref NaclGroup4SubnetIds]
      NetworkAclId: !Ref NaclGroup4
  NaclGroup4Subnet2Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup4Subnet2Exist
    Properties:
      SubnetId:
        !Select [ 1, !Ref NaclGroup4SubnetIds]
      NetworkAclId: !Ref NaclGroup4
  NaclGroup4Subnet3Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup4Subnet3Exist
    Properties:
      SubnetId:
        !Select [ 2, !Ref NaclGroup4SubnetIds]
      NetworkAclId: !Ref NaclGroup4
  NaclGroup4Subnet4Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup4Subnet4Exist
    Properties:
      SubnetId:
        !Select [ 3, !Ref NaclGroup4SubnetIds]
      NetworkAclId: !Ref NaclGroup4
  NaclGroup4InboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules0Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4
  NaclGroup4InboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules1Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules2Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules3Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules4Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules5Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules6Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules7Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules8Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules9Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules10Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules11Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules12Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules13Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules14Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules15Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules16Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules17Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules18Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4InboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4InboundRules19Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup4InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup4InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup4InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup4InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup4InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup4InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules0Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4
  NaclGroup4OutboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules1Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules2Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules3Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules4Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules5Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules6Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules7Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules8Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules9Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules10Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules11Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules12Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules13Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules14Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules15Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules16Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules17Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules18Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4      
  NaclGroup4OutboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup4OutboundRules19Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup4OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup4OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup4OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup4OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup4OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup4OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup4
  NaclGroup5:
    Type: AWS::EC2::NetworkAcl
    Condition: CreateNaclGroup5
    Properties:
      VpcId:
        Ref: VpcId
      Tags:
      - Key: Name
        Value: 
          !Sub 
          - '${ResourceNamePrefix}-${EnvironmentType}-${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 4, !Ref NaclGroupNames ]
      - Key: ApplicationRole
        Value: !Sub 
          - '${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 4, !Ref NaclGroupNames ]
  NaclGroup5Subnet1Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup5Subnet1Exist
    Properties:
      SubnetId:
        !Select [ 0, !Ref NaclGroup5SubnetIds]
      NetworkAclId: !Ref NaclGroup5
  NaclGroup5Subnet2Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup5Subnet2Exist
    Properties:
      SubnetId:
        !Select [ 1, !Ref NaclGroup5SubnetIds]
      NetworkAclId: !Ref NaclGroup5
  NaclGroup5Subnet3Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup5Subnet3Exist
    Properties:
      SubnetId:
        !Select [ 2, !Ref NaclGroup5SubnetIds]
      NetworkAclId: !Ref NaclGroup5
  NaclGroup5Subnet4Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup5Subnet4Exist
    Properties:
      SubnetId:
        !Select [ 3, !Ref NaclGroup5SubnetIds]
      NetworkAclId: !Ref NaclGroup5
  NaclGroup5InboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules0Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5
  NaclGroup5InboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules1Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules2Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules3Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules4Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules5Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules6Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules7Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules8Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules9Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules10Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules11Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules12Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules13Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules14Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules15Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules16Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules17Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules18Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5InboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5InboundRules19Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup5InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup5InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup5InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup5InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup5InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup5InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules0Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5
  NaclGroup5OutboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules1Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules2Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules3Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules4Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules5Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules6Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules7Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules8Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules9Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules10Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules11Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules12Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules13Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules14Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules15Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules16Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules17Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules18Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5      
  NaclGroup5OutboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup5OutboundRules19Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup5OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup5OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup5OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup5OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup5OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup5OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup5
  NaclGroup6:
    Type: AWS::EC2::NetworkAcl
    Condition: CreateNaclGroup6
    Properties:
      VpcId:
        Ref: VpcId
      Tags:
      - Key: Name
        Value: 
          !Sub 
          - '${ResourceNamePrefix}-${EnvironmentType}-${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 5, !Ref NaclGroupNames ]
      - Key: ApplicationRole
        Value: !Sub 
          - '${ServiceName}-${NaclGroupName}-Nacl'
          - NaclGroupName: !Select [ 5, !Ref NaclGroupNames ]
  NaclGroup6Subnet1Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup6Subnet1Exist
    Properties:
      SubnetId:
        !Select [ 0, !Ref NaclGroup6SubnetIds]
      NetworkAclId: !Ref NaclGroup6
  NaclGroup6Subnet2Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup6Subnet2Exist
    Properties:
      SubnetId:
        !Select [ 1, !Ref NaclGroup6SubnetIds]
      NetworkAclId: !Ref NaclGroup6
  NaclGroup6Subnet3Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup6Subnet3Exist
    Properties:
      SubnetId:
        !Select [ 2, !Ref NaclGroup6SubnetIds]
      NetworkAclId: !Ref NaclGroup6
  NaclGroup6Subnet4Association:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: NaclGroup6Subnet4Exist
    Properties:
      SubnetId:
        !Select [ 3, !Ref NaclGroup6SubnetIds]
      NetworkAclId: !Ref NaclGroup6
  NaclGroup6InboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules0Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6
  NaclGroup6InboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules1Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules2Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules3Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules4Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules5Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules6Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules7Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules8Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules9Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules10Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules11Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules12Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules13Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules14Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules15Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules16Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules17Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules18Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6InboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6InboundRules19Exist
    Properties:
      Egress: 'false'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup6InboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup6InboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup6InboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup6InboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup6InboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup6InboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules0:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules0Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 0, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 0, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 0, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 0, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 0, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 0, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6
  NaclGroup6OutboundRules1:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules1Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 1, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 1, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 1, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 1, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 1, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 1, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules2:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules2Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 2, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 2, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 2, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 2, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 2, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 2, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules3:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules3Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 3, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 3, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 3, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 3, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 3, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 3, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules4:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules4Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 4, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 4, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 4, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 4, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 4, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 4, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules5:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules5Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 5, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 5, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 5, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 5, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 5, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 5, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules6:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules6Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 6, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 6, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 6, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 6, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 6, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 6, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules7:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules7Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 7, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 7, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 7, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 7, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 7, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 7, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules8:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules8Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 8, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 8, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 8, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 8, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 8, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 8, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules9:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules9Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 9, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 9, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 9, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 9, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 9, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 9, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules10:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules10Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 10, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 10, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 10, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 10, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 10, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 10, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules11:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules11Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 11, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 11, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 11, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 11, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 11, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 11, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules12:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules12Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 12, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 12, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 12, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 12, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 12, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 12, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules13:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules13Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 13, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 13, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 13, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 13, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 13, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 13, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules14:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules14Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 14, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 14, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 14, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 14, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 14, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 14, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules15:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules15Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 15, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 15, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 15, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 15, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 15, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 15, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules16:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules16Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 16, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 16, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 16, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 16, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 16, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 16, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules17:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules17Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 17, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 17, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 17, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 17, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 17, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 17, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules18:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules18Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 18, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 18, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 18, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 18, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 18, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 18, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6      
  NaclGroup6OutboundRules19:
    Type: AWS::EC2::NetworkAclEntry
    Condition: NaclGroup6OutboundRules19Exist
    Properties:
      Egress: 'true'
      RuleNumber: !Select [ 0, !Split [ ":", !Select [ 19, !Ref NaclGroup6OutboundRules]]]
      PortRange:
        From: !Select [ 1, !Split [ ":", !Select [ 19, !Ref NaclGroup6OutboundRules]]]
        To: !Select [ 2, !Split [ ":", !Select [ 19, !Ref NaclGroup6OutboundRules]]]
      Protocol: !Select [ 3, !Split [ ":", !Select [ 19, !Ref NaclGroup6OutboundRules]]]
      RuleAction: !Select [ 4, !Split [ ":", !Select [ 19, !Ref NaclGroup6OutboundRules]]]
      CidrBlock: !Select [ 5, !Split [ ":", !Select [ 19, !Ref NaclGroup6OutboundRules]]]
      NetworkAclId:
        Ref: NaclGroup6